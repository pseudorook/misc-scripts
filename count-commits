#! /bin/bash
set -eu
source globals

get_count() {
  dir=${@:-1}
  if [ -d "${dir}/.git" ]; then
    if git -C "${dir}" log --oneline >/dev/null 2>&1; then
      #                                         ^^^^
      # Pipe stderr to stdout (and then to /dev/null) to suppress error
      # messages git prints when a repository is empty, etc.
      local cmd="git -C ${dir} rev-list --all --count"
      if ! [ -z ${AUTHOR} ]; then
        cmd+=" --author ${AUTHOR}"
      fi
      if ! [ -z ${TIMECOUNT} ] && ! [ -z ${TIMEUNIT} ]; then
        cmd+=" --after \"$(date -d "- ${TIMECOUNT} ${TIMEUNIT}")\""
      fi
      count=$(eval $cmd)
      echo ${count}
    fi
  fi
}
export -f get_count


OPTIONS=a:d:
LONGOPTIONS=author:,during:
PARSED=$(getopt -o ${OPTIONS} --long ${LONGOPTIONS} -n "$0" -- "$@")
eval set -- "$PARSED"

while [ $# -ge 1 ]; do
  case "$1" in
    -a|--author)
      export AUTHOR=${2}
      shift 2
      ;;
    -d|--during)
      export TIMECOUNT=${2%%[A-Za-z]*}
      export TIMEUNIT=${2##*[0-9]}
      shift 2
      ;;
    --)
      shift
      break
      ;;
    *)
      show_error "Error"
      exit 3
      ;;
  esac
done

find ${projectdir} -maxdepth 3 -type d \
  -exec bash -c 'get_count "{}"' \; | awk '{s+=$1}END{print s}'
